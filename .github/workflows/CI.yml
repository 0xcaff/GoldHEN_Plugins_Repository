name: Build modules

on:
  push:
    paths-ignore:
      - "**/*.md"
      - '**/*.txt'
  pull_request:
    paths-ignore:
      - "**/*.md"
      - '**/*.txt'
  workflow_dispatch:

jobs:
  build_prx:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Checkout SDK
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.my_token }}
        repository: GoldHEN/GoldHEN_Plugins_SDK
        path: SDK

    - name: Setup variables
      run: |
        echo "OO_PS4_TOOLCHAIN=$GITHUB_WORKSPACE/OpenOrbis/PS4Toolchain" >> $GITHUB_ENV
        ver="1.$(git rev-list HEAD --count)"
        echo "commit_ver=$ver" >> $GITHUB_ENV

    - name: Cache OpenOrbis Toolchain
      id: cache-oosdk
      uses: actions/cache@v3
      with:
        path: ${{ env.OO_PS4_TOOLCHAIN }}
        key: ${{ runner.os }}-oosdk

    # temporary release until 0.53 is released
    - name: Download OpenOrbis Toolchain
      if: steps.cache-oosdk.outputs.cache-hit != 'true'
      run: |
        curl -fLOs https://github.com/illusion0001/OpenOrbis-PS4-Toolchain/releases/download/0.0.1.416/toolchain.tar.gz
        tar xf toolchain.tar.gz

    - name: Setup dependencies
      run: sudo apt install llvm lld

    - name: Build SDK Static Lib
      working-directory: SDK
      run: |
        clang -v
        make DEBUGFLAGS=1
        echo "GOLDHEN_SDK=$(pwd)" >> $GITHUB_ENV

    - name: Build (Release)
      run: bash build.sh

    - name: Build (Debug)
      run: bash build.sh -debug

    - name: Push module artifact (Release prx)
      uses: actions/upload-artifact@v3
      with:
        name: goldplugins_${{ env.commit_ver }}_prx_final
        path: bin/plugins/prx_final/*
        if-no-files-found: error

    - name: Push module artifact (Release elf)
      uses: actions/upload-artifact@v3
      with:
        name: goldplugins_${{ env.commit_ver }}_elf_final
        path: bin/plugins/elf_final/*.elf
        if-no-files-found: error

    - name: Push module artifact (Debug prx)
      uses: actions/upload-artifact@v3
      with:
        name: goldplugins_${{ env.commit_ver }}_prx_debug
        path: bin/plugins/prx_debug/*
        if-no-files-found: error

    - name: Push module artifact (Debug elf)
      uses: actions/upload-artifact@v3
      with:
        name: goldplugins_${{ env.commit_ver }}_elf_debug
        path: bin/plugins/elf_debug/*.elf
        if-no-files-found: error

    - name: Create release
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.repository == 'GoldHEN/GoldHEN_Plugins_Repository'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd bin/plugins
        mv prx_final plugins
        chmod -R 0777 plugins
        zip -r plugins.zip plugins/*
        echo "<details>" > hash.md
        echo "<summary>Plugin Hashes (Click to Expand)</summary>" >> hash.md
        echo "" >> hash.md
        echo "\`\`\`md5" >> hash.md
        cat plugins/md5.txt >> hash.md
        echo "\`\`\`" >> hash.md
        echo "" >> hash.md
        echo "\`\`\`sha256" >> hash.md
        cat plugins/sha256.txt >> hash.md
        echo "\`\`\`" >> hash.md
        echo "" >> hash.md
        echo "</details>" >> hash.md
        gh release create ${{ env.commit_ver }} plugins.zip --target ${{ GITHUB.SHA }} -t "${{ env.commit_ver }}" -F hash.md
