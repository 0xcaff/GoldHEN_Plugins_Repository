name: Build modules

on:
  push:
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.h'
      - '**/*.yml'
      - '**/Makefile'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download OpenOrbis Toolchain
      env:
        GH_SDK: ${{ secrets.GH_SDK_URL }}
      run: |
        curl -fLOs $GH_SDK
        curl -fLOs https://github.com/illusion0001/OpenOrbis-PS4-Toolchain/releases/download/0.0.1.416/toolchain.tar.gz
        tar xf toolchain.tar.gz
        7za x sceKernelOpen_HookSDK.7z > a
        echo "OO_PS4_TOOLCHAIN=$GITHUB_WORKSPACE/OpenOrbis/PS4Toolchain" >> $GITHUB_ENV
        echo "GOLDHEN_SDK=$GITHUB_WORKSPACE/SDK" >> $GITHUB_ENV
        sudo apt install lld
        ver="1.$(git rev-list HEAD --count)"
        echo "commit_ver=$ver" >> $GITHUB_ENV

    - name: Set build information
      run: |
        echo "#define GIT_COMMIT \"$(git rev-parse HEAD)\"" > common/git_ver.h
        echo "#define GIT_VER \"$(git branch --show-current)_1.$(git rev-list HEAD --count)\"" >> common/git_ver.h
        echo "#define GIT_NUM $(git rev-list HEAD --count)" >> common/git_ver.h
        echo "#define BUILD_DATE \"$(date '+%b %d %Y @ %T (%Z %z)')\"" >> common/git_ver.h
        cat common/git_ver.h

    - name: Build
      run: |
        clang -v
        FINAL="FINAL=-DFINAL"
        cd plugin-src
        for dir in ./*; do (echo "$dir" && cd "$dir" && make $FINAL); done

    - name: Push module artifact
      uses: actions/upload-artifact@v3
      with:
        name: goldplugins_${{ env.commit_ver }}
        path: bin/plugins/*.prx
        if-no-files-found: error
        retention-days: 7
